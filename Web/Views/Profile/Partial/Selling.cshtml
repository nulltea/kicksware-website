@using Core.Services
@using Infrastructure.Usecase.Models
@using Core.Entities.Products
@using Core.Extension
@using Core.Model
@model Core.Entities.Users.User
@inject ISneakerProductService Service
@inject IQueryBuilder Builder

<div class="row section-content" id="selling-content">
	<h3>SOLD SNEAKERS</h3>
	@{
		if (Model?.UniqueID != null)
		{
			var soldSneakers = new FilteredModel<SneakerProduct>(Builder, Service);
			soldSneakers.AddHiddenFilterGroup("owner").AssignParameter(Model.UniqueID);
			await soldSneakers.FetchPageAsync(1);

			<div class="@($"products-view { Model.Settings.LayoutView.GetEnumMemberValue() }")">
				@{ await Html.RenderPartialAsync("../Shop/Partial/ProductsPartial", soldSneakers); }
			</div>
			await Html.RenderPartialAsync("_PagedPartial", soldSneakers);
		}
	}
</div>